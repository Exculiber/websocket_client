name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build'
        required: true
        default: '1.0.0'

jobs:
  build:
    env:
      PYTHONUTF8: '1'
      PYTHONIOENCODING: 'utf-8'
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11']
        exclude:
          - os: windows-latest
            python-version: '3.8'
          - os: macos-latest
            python-version: '3.8'

    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install UPX (Linux, optional)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update -y || true
        sudo apt-get install -y upx || true

    - name: Install UPX (macOS, optional)
      if: runner.os == 'macOS'
      run: |
        brew update || true
        brew install upx || true

    - name: Install UPX (Windows, optional)
      if: runner.os == 'Windows'
      shell: powershell
      continue-on-error: true
      run: |
        choco install upx -y

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Run tests
      run: |
        python tests/test_probe.py
        python tests/test_compatibility.py

    - name: Build binary
      run: python scripts/build_binary.py

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: websocket-probe-${{ matrix.os }}-${{ matrix.python-version }}
        path: |
          dist/
          build/
        retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Prepare release files
      run: |
        echo "📁 整理发布文件..."
        mkdir -p release_files
        
        # 复制二进制文件
        for artifact_dir in artifacts/*/; do
          if [ -d "$artifact_dir" ]; then
            echo "处理: $artifact_dir"
            
            # 复制 dist 目录下的二进制文件
            if [ -d "$artifact_dir/dist" ]; then
              for binary in "$artifact_dir/dist"/websocket-probe-*; do
                if [ -f "$binary" ]; then
                  filename=$(basename "$binary")
                  echo "📦 复制二进制文件: $filename"
                  cp "$binary" "release_files/$filename"
                fi
              done
            fi
            
            # 复制 release 目录
            if [ -d "$artifact_dir/release-"* ]; then
              for release_dir in "$artifact_dir/release-"*; do
                if [ -d "$release_dir" ]; then
                  dirname=$(basename "$release_dir")
                  echo "📁 复制发布目录: $dirname"
                  cp -r "$release_dir" "release_files/"
                fi
              done
            fi
          fi
        done
        
        echo "📋 发布文件列表:"
        ls -la release_files/

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        body: |
          ## WebSocket Probe Tool ${{ github.ref_name }}
          
          ### Changes
          - Automated build for multiple platforms
          - Python versions: 3.8, 3.9, 3.10, 3.11
          - Operating systems: Windows, macOS, Linux
          
          ### Downloads
          Check the artifacts above for your platform.
          
        draft: false
        prerelease: false
        files: release_files/**
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
